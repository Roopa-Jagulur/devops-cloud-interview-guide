Terraform:
Terraform, state file is the brain of the terraform.
whenever Terraform creates a resource on cloud provider like AWS, Terraform stores this information on to the statefile to 
understand what resources it has created.
So in future, if it has to update the resource that it created, it will just go back to the statefile. Understand what is the 
current state of the resource. And then it will understand what needs to be updated.

For Example:
EC2 instance resource need to be created using statefile as reference:
Now, terraform goes to the statefile, understand current state, create EC2 instance and It stores the metadata of the EC2 instance 
like, stores IP address of the instance that it created, and it also stores the last known state of the EC2 instance.

So next time, if it has to update, it will see if the resource ID exists. If exists, It will look at the current metadata.
What exactly is the IP address and what is the last state. Basically last state is what is the complete information of the EC2 instance that it knows.
Next time, Terraform understand looking at statefile what user is asking it to update, may be a small chnge on the EC2 instance.
So It'll just make an API call to AWS to update that small change on the EC2 instance.

note: If no state file maintained then terraform will not have reference on what been created on cloud provider, if I 
run $Terraform apply, make API call then will may create / not create resources on cloud provider. Not cost effective approach.
